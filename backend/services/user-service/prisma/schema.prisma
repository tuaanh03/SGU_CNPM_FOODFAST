// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER // Khách hàng - chỉ có thể đặt hàng
  STORE_ADMIN // Admin cửa hàng - quản lý sản phẩm, đơn hàng
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BANNED
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  password String
  name     String
  phone    String?
  avatar   String?

  role   UserRole   @default(CUSTOMER)
  status UserStatus @default(ACTIVE)

  // Thông tin địa chỉ
  addresses Address[]

  // Thông tin cửa hàng (chỉ dành cho STORE_ADMIN)
  store Store?

  // Phương thức thanh toán
  paymentMethods PaymentMethod[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([role])
  @@index([status])
}

model Address {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name      String // Tên người nhận
  phone     String // SĐT người nhận
  address   String // Địa chỉ chi tiết
  ward      String // Phường/Xã
  district  String // Quận/Huyện
  province  String // Tỉnh/Thành phố
  isDefault Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Store {
  id      String @id @default(uuid())
  ownerId String @unique
  owner   User   @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  name        String
  description String?
  avatar      String?
  cover       String?

  // Địa chỉ cửa hàng
  address  String
  ward     String
  district String
  province String

  phone String?
  email String?

  // Thời gian hoạt động
  openTime  String? // Ví dụ: "08:00"
  closeTime String? // Ví dụ: "22:00"

  isActive Boolean @default(true)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
  @@index([isActive])
}

model PaymentMethod {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  cardNumber     String
  expiryDate     String
  cardholderName String
  isDefault      Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, cardNumber])
  @@index([userId])
}
