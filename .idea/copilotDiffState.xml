<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/backend/services/order-service/prisma/migrations/20251007000000_init/migration.sql">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/backend/services/order-service/prisma/migrations/20251007000000_init/migration.sql" />
              <option name="updatedContent" value="-- CreateTable Order&#10;CREATE TABLE &quot;Order&quot; (&#10;  &quot;id&quot; TEXT PRIMARY KEY,&#10;  &quot;userId&quot; TEXT NOT NULL,&#10;  &quot;totalPrice&quot; INTEGER NOT NULL,&#10;  &quot;deliveryAddress&quot; TEXT NOT NULL,&#10;  &quot;contactPhone&quot; TEXT NOT NULL,&#10;  &quot;note&quot; TEXT,&#10;  &quot;status&quot; TEXT NOT NULL,&#10;  &quot;createdAt&quot; TIMESTAMP(3) NOT NULL DEFAULT CURRENT_TIMESTAMP,&#10;  &quot;updatedAt&quot; TIMESTAMP(3) NOT NULL&#10;);&#10;&#10;-- CreateTable OrderItem&#10;CREATE TABLE &quot;OrderItem&quot; (&#10;  &quot;id&quot; TEXT PRIMARY KEY,&#10;  &quot;orderId&quot; TEXT NOT NULL,&#10;  &quot;productId&quot; TEXT NOT NULL,&#10;  &quot;productName&quot; TEXT NOT NULL,&#10;  &quot;productPrice&quot; INTEGER NOT NULL,&#10;  &quot;quantity&quot; INTEGER NOT NULL&#10;);&#10;&#10;-- AddForeignKey&#10;ALTER TABLE &quot;OrderItem&quot; ADD CONSTRAINT &quot;OrderItem_orderId_fkey&quot; FOREIGN KEY (&quot;orderId&quot;) REFERENCES &quot;Order&quot;(&quot;id&quot;) ON DELETE CASCADE ON UPDATE CASCADE;&#10;&#10;-- Indexes&#10;CREATE INDEX &quot;Order_userId_idx&quot; ON &quot;Order&quot;(&quot;userId&quot;);&#10;CREATE INDEX &quot;Order_status_idx&quot; ON &quot;Order&quot;(&quot;status&quot;);&#10;CREATE INDEX &quot;OrderItem_orderId_idx&quot; ON &quot;OrderItem&quot;(&quot;orderId&quot;);&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/backend/services/product-service/prisma/migrations/20251007000500_add_storeId_to_product/migration.sql">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/backend/services/product-service/prisma/migrations/20251007000500_add_storeId_to_product/migration.sql" />
              <option name="updatedContent" value="-- AlterTable: add storeId to Product&#10;ALTER TABLE &quot;Product&quot; ADD COLUMN IF NOT EXISTS &quot;storeId&quot; TEXT;&#10;&#10;-- Index for storeId&#10;CREATE INDEX IF NOT EXISTS &quot;Product_storeId_idx&quot; ON &quot;Product&quot;(&quot;storeId&quot;);&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/cnmp-fooddelivery/src/components/MenuSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/cnmp-fooddelivery/src/components/MenuSection.tsx" />
              <option name="updatedContent" value="import { Card, CardContent } from &quot;@/components/ui/card&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import { Badge } from &quot;@/components/ui/badge&quot;;&#10;import { Star, Plus, Minus } from &quot;lucide-react&quot;;&#10;import { useCart } from &quot;@/contexts/cart-context&quot;;&#10;&#10;interface MenuItem {&#10;  id: number;&#10;  name: string;&#10;  description: string;&#10;  price: number;&#10;  image: string;&#10;  popular: boolean;&#10;}&#10;&#10;interface MenuSectionData {&#10;  category: string;&#10;  items: MenuItem[];&#10;}&#10;&#10;interface MenuSectionProps {&#10;  section: MenuSectionData;&#10;  restaurantId: number;&#10;  restaurantName: string;&#10;}&#10;&#10;const MenuSection = ({ section, restaurantId, restaurantName }: MenuSectionProps) =&gt; {&#10;  const { state, dispatch } = useCart();&#10;&#10;  const formatPrice = (price: number) =&gt; {&#10;    return new Intl.NumberFormat('vi-VN', {&#10;      style: 'currency',&#10;      currency: 'VND'&#10;    }).format(price);&#10;  };&#10;&#10;  const handleAddToCart = (item: MenuItem) =&gt; {&#10;    dispatch({&#10;      type: &quot;ADD_ITEM&quot;,&#10;      payload: {&#10;        id: item.id.toString(),&#10;        name: item.name,&#10;        price: item.price,&#10;        imageUrl: item.image,&#10;      },&#10;    });&#10;  };&#10;&#10;  const handleUpdateQuantity = (itemId: string, quantity: number) =&gt; {&#10;    dispatch({&#10;      type: &quot;UPDATE_QUANTITY&quot;,&#10;      payload: { id: itemId, quantity },&#10;    });&#10;  };&#10;&#10;  const getQuantityInCart = (itemId: string) =&gt; {&#10;    const cartItem = state.items.find((item) =&gt; item.id === itemId);&#10;    return cartItem?.quantity || 0;&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;mb-8&quot;&gt;&#10;      &lt;h2 className=&quot;text-2xl font-bold text-foreground mb-4&quot;&gt;{section.category}&lt;/h2&gt;&#10;      &#10;      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;        {section.items.map((item) =&gt; {&#10;          const quantity = getQuantityInCart(item.id.toString());&#10;          &#10;          return (&#10;            &lt;Card key={item.id} className=&quot;group cursor-pointer overflow-hidden hover:shadow-lg transition-all duration-300&quot;&gt;&#10;              &lt;div className=&quot;flex&quot;&gt;&#10;                {/* Item Info */}&#10;                &lt;CardContent className=&quot;flex-1 p-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-start justify-between mb-2&quot;&gt;&#10;                    &lt;div className=&quot;flex-1&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center gap-2 mb-1&quot;&gt;&#10;                        &lt;h3 className=&quot;font-semibold text-lg text-foreground group-hover:text-primary transition-colors&quot;&gt;&#10;                          {item.name}&#10;                        &lt;/h3&gt;&#10;                        {item.popular &amp;&amp; (&#10;                          &lt;Badge className=&quot;bg-orange-100 text-orange-800 text-xs&quot;&gt;&#10;                            &lt;Star className=&quot;w-3 h-3 mr-1 fill-current&quot; /&gt;&#10;                            Phổ biến&#10;                          &lt;/Badge&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                      &#10;                      &lt;p className=&quot;text-sm text-muted-foreground mb-3 line-clamp-2&quot;&gt;&#10;                        {item.description}&#10;                      &lt;/p&gt;&#10;                      &#10;                      &lt;p className=&quot;text-xl font-bold text-primary mb-3&quot;&gt;&#10;                        {formatPrice(item.price)}&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &#10;                  {/* Add to Cart Controls */}&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-muted-foreground&quot;&gt;&#10;                      Giao trong 15-20 phút&#10;                    &lt;/div&gt;&#10;                    &#10;                    {quantity === 0 ? (&#10;                      &lt;Button&#10;                        size=&quot;sm&quot;&#10;                        onClick={() =&gt; handleAddToCart(item)}&#10;                        className=&quot;h-8 px-4&quot;&#10;                      &gt;&#10;                        &lt;Plus className=&quot;w-4 h-4 mr-1&quot; /&gt;&#10;                        Thêm&#10;                      &lt;/Button&gt;&#10;                    ) : (&#10;                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;Button&#10;                          variant=&quot;outline&quot;&#10;                          size=&quot;sm&quot;&#10;                          className=&quot;h-8 w-8 p-0&quot;&#10;                          onClick={() =&gt; handleUpdateQuantity(item.id.toString(), quantity - 1)}&#10;                        &gt;&#10;                          &lt;Minus className=&quot;w-3 h-3&quot; /&gt;&#10;                        &lt;/Button&gt;&#10;                        &lt;span className=&quot;font-semibold min-w-[2rem] text-center&quot;&gt;&#10;                          {quantity}&#10;                        &lt;/span&gt;&#10;                        &lt;Button&#10;                          size=&quot;sm&quot;&#10;                          className=&quot;h-8 w-8 p-0&quot;&#10;                          onClick={() =&gt; handleUpdateQuantity(item.id.toString(), quantity + 1)}&#10;                        &gt;&#10;                          &lt;Plus className=&quot;w-3 h-3&quot; /&gt;&#10;                        &lt;/Button&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/CardContent&gt;&#10;&#10;                {/* Item Image */}&#10;                &lt;div className=&quot;w-24 md:w-32 h-24 md:h-32 relative flex-shrink-0&quot;&gt;&#10;                  &lt;img&#10;                    src={item.image}&#10;                    alt={item.name}&#10;                    className=&quot;w-full h-full object-cover group-hover:scale-105 transition-transform duration-300&quot;&#10;                  /&gt;&#10;                  {item.popular &amp;&amp; (&#10;                    &lt;div className=&quot;absolute top-1 right-1&quot;&gt;&#10;                      &lt;Badge className=&quot;bg-primary text-primary-foreground text-xs px-1 py-0&quot;&gt;&#10;                        HOT&#10;                      &lt;/Badge&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          );&#10;        })}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default MenuSection;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>