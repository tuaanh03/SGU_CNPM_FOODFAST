<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/frontend/cnmp-fooddelivery/src/components/MenuSection.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/cnmp-fooddelivery/src/components/MenuSection.tsx" />
              <option name="updatedContent" value="import { Card, CardContent } from &quot;@/components/ui/card&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import { Badge } from &quot;@/components/ui/badge&quot;;&#10;import { Star, Plus, Minus } from &quot;lucide-react&quot;;&#10;import { useCart } from &quot;@/contexts/cart-context&quot;;&#10;&#10;interface MenuItem {&#10;  id: number;&#10;  name: string;&#10;  description: string;&#10;  price: number;&#10;  image: string;&#10;  popular: boolean;&#10;}&#10;&#10;interface MenuSectionData {&#10;  category: string;&#10;  items: MenuItem[];&#10;}&#10;&#10;interface MenuSectionProps {&#10;  section: MenuSectionData;&#10;  restaurantId: number;&#10;  restaurantName: string;&#10;}&#10;&#10;const MenuSection = ({ section, restaurantId, restaurantName }: MenuSectionProps) =&gt; {&#10;  const { state, dispatch } = useCart();&#10;&#10;  const formatPrice = (price: number) =&gt; {&#10;    return new Intl.NumberFormat('vi-VN', {&#10;      style: 'currency',&#10;      currency: 'VND'&#10;    }).format(price);&#10;  };&#10;&#10;  const handleAddToCart = (item: MenuItem) =&gt; {&#10;    dispatch({&#10;      type: &quot;ADD_ITEM&quot;,&#10;      payload: {&#10;        id: item.id.toString(),&#10;        name: item.name,&#10;        price: item.price,&#10;        imageUrl: item.image,&#10;      },&#10;    });&#10;  };&#10;&#10;  const handleUpdateQuantity = (itemId: string, quantity: number) =&gt; {&#10;    dispatch({&#10;      type: &quot;UPDATE_QUANTITY&quot;,&#10;      payload: { id: itemId, quantity },&#10;    });&#10;  };&#10;&#10;  const getQuantityInCart = (itemId: string) =&gt; {&#10;    const cartItem = state.items.find((item) =&gt; item.id === itemId);&#10;    return cartItem?.quantity || 0;&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;mb-8&quot;&gt;&#10;      &lt;h2 className=&quot;text-2xl font-bold text-foreground mb-4&quot;&gt;{section.category}&lt;/h2&gt;&#10;      &#10;      &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;&gt;&#10;        {section.items.map((item) =&gt; {&#10;          const quantity = getQuantityInCart(item.id.toString());&#10;          &#10;          return (&#10;            &lt;Card key={item.id} className=&quot;group cursor-pointer overflow-hidden hover:shadow-lg transition-all duration-300&quot;&gt;&#10;              &lt;div className=&quot;flex&quot;&gt;&#10;                {/* Item Info */}&#10;                &lt;CardContent className=&quot;flex-1 p-4&quot;&gt;&#10;                  &lt;div className=&quot;flex items-start justify-between mb-2&quot;&gt;&#10;                    &lt;div className=&quot;flex-1&quot;&gt;&#10;                      &lt;div className=&quot;flex items-center gap-2 mb-1&quot;&gt;&#10;                        &lt;h3 className=&quot;font-semibold text-lg text-foreground group-hover:text-primary transition-colors&quot;&gt;&#10;                          {item.name}&#10;                        &lt;/h3&gt;&#10;                        {item.popular &amp;&amp; (&#10;                          &lt;Badge className=&quot;bg-orange-100 text-orange-800 text-xs&quot;&gt;&#10;                            &lt;Star className=&quot;w-3 h-3 mr-1 fill-current&quot; /&gt;&#10;                            Phổ biến&#10;                          &lt;/Badge&gt;&#10;                        )}&#10;                      &lt;/div&gt;&#10;                      &#10;                      &lt;p className=&quot;text-sm text-muted-foreground mb-3 line-clamp-2&quot;&gt;&#10;                        {item.description}&#10;                      &lt;/p&gt;&#10;                      &#10;                      &lt;p className=&quot;text-xl font-bold text-primary mb-3&quot;&gt;&#10;                        {formatPrice(item.price)}&#10;                      &lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &#10;                  {/* Add to Cart Controls */}&#10;                  &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div className=&quot;text-sm text-muted-foreground&quot;&gt;&#10;                      Giao trong 15-20 phút&#10;                    &lt;/div&gt;&#10;                    &#10;                    {quantity === 0 ? (&#10;                      &lt;Button&#10;                        size=&quot;sm&quot;&#10;                        onClick={() =&gt; handleAddToCart(item)}&#10;                        className=&quot;h-8 px-4&quot;&#10;                      &gt;&#10;                        &lt;Plus className=&quot;w-4 h-4 mr-1&quot; /&gt;&#10;                        Thêm&#10;                      &lt;/Button&gt;&#10;                    ) : (&#10;                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;&#10;                        &lt;Button&#10;                          variant=&quot;outline&quot;&#10;                          size=&quot;sm&quot;&#10;                          className=&quot;h-8 w-8 p-0&quot;&#10;                          onClick={() =&gt; handleUpdateQuantity(item.id.toString(), quantity - 1)}&#10;                        &gt;&#10;                          &lt;Minus className=&quot;w-3 h-3&quot; /&gt;&#10;                        &lt;/Button&gt;&#10;                        &lt;span className=&quot;font-semibold min-w-[2rem] text-center&quot;&gt;&#10;                          {quantity}&#10;                        &lt;/span&gt;&#10;                        &lt;Button&#10;                          size=&quot;sm&quot;&#10;                          className=&quot;h-8 w-8 p-0&quot;&#10;                          onClick={() =&gt; handleUpdateQuantity(item.id.toString(), quantity + 1)}&#10;                        &gt;&#10;                          &lt;Plus className=&quot;w-3 h-3&quot; /&gt;&#10;                        &lt;/Button&gt;&#10;                      &lt;/div&gt;&#10;                    )}&#10;                  &lt;/div&gt;&#10;                &lt;/CardContent&gt;&#10;&#10;                {/* Item Image */}&#10;                &lt;div className=&quot;w-24 md:w-32 h-24 md:h-32 relative flex-shrink-0&quot;&gt;&#10;                  &lt;img&#10;                    src={item.image}&#10;                    alt={item.name}&#10;                    className=&quot;w-full h-full object-cover group-hover:scale-105 transition-transform duration-300&quot;&#10;                  /&gt;&#10;                  {item.popular &amp;&amp; (&#10;                    &lt;div className=&quot;absolute top-1 right-1&quot;&gt;&#10;                      &lt;Badge className=&quot;bg-primary text-primary-foreground text-xs px-1 py-0&quot;&gt;&#10;                        HOT&#10;                      &lt;/Badge&gt;&#10;                    &lt;/div&gt;&#10;                  )}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/Card&gt;&#10;          );&#10;        })}&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default MenuSection;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/cnpm-fooddelivery/src/components/RestaurantHeader.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/cnpm-fooddelivery/src/components/RestaurantHeader.tsx" />
              <option name="updatedContent" value="import { Badge } from &quot;@/components/ui/badge&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import { Star, Clock, Truck, MapPin, Heart, Share2 } from &quot;lucide-react&quot;;&#10;&#10;interface RestaurantData {&#10;  id: number;&#10;  name: string;&#10;  image: string;&#10;  rating: number;&#10;  reviewCount: number;&#10;  deliveryTime: string;&#10;  deliveryFee: string;&#10;  categories: string[];&#10;  promo: string;&#10;  distance: string;&#10;  address: string;&#10;  openTime: string;&#10;}&#10;&#10;interface RestaurantHeaderProps {&#10;  restaurant: RestaurantData;&#10;}&#10;&#10;const RestaurantHeader = ({ restaurant }: RestaurantHeaderProps) =&gt; {&#10;  return (&#10;    &lt;div className=&quot;relative&quot;&gt;&#10;      {/* Cover Image */}&#10;      &lt;div className=&quot;h-64 md:h-80 relative overflow-hidden&quot;&gt;&#10;        &lt;img&#10;          src={restaurant.image}&#10;          alt={restaurant.name}&#10;          className=&quot;w-full h-full object-cover&quot;&#10;        /&gt;&#10;        &lt;div className=&quot;absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent&quot; /&gt;&#10;        &#10;        {/* Promo Badge */}&#10;        &lt;Badge className=&quot;absolute top-4 left-4 bg-primary text-primary-foreground&quot;&gt;&#10;          {restaurant.promo}&#10;        &lt;/Badge&gt;&#10;        &#10;        {/* Action Buttons */}&#10;        &lt;div className=&quot;absolute top-4 right-4 flex gap-2&quot;&gt;&#10;          &lt;Button variant=&quot;secondary&quot; size=&quot;sm&quot; className=&quot;rounded-full&quot;&gt;&#10;            &lt;Heart className=&quot;w-4 h-4&quot; /&gt;&#10;          &lt;/Button&gt;&#10;          &lt;Button variant=&quot;secondary&quot; size=&quot;sm&quot; className=&quot;rounded-full&quot;&gt;&#10;            &lt;Share2 className=&quot;w-4 h-4&quot; /&gt;&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      {/* Restaurant Info */}&#10;      &lt;div className=&quot;container mx-auto px-4 py-6&quot;&gt;&#10;        &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;          &lt;div className=&quot;flex flex-col md:flex-row justify-between items-start md:items-center gap-4&quot;&gt;&#10;            &lt;div className=&quot;flex-1&quot;&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-foreground mb-2&quot;&gt;&#10;                {restaurant.name}&#10;              &lt;/h1&gt;&#10;              &#10;              &lt;div className=&quot;flex flex-wrap gap-2 mb-4&quot;&gt;&#10;                {restaurant.categories.map((category) =&gt; (&#10;                  &lt;Badge key={category} variant=&quot;secondary&quot; className=&quot;text-xs&quot;&gt;&#10;                    {category}&#10;                  &lt;/Badge&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;flex items-center gap-4 text-sm text-muted-foreground mb-4&quot;&gt;&#10;                &lt;div className=&quot;flex items-center gap-1&quot;&gt;&#10;                  &lt;Star className=&quot;w-4 h-4 fill-yellow-400 text-yellow-400&quot; /&gt;&#10;                  &lt;span className=&quot;font-medium text-foreground&quot;&gt;{restaurant.rating}&lt;/span&gt;&#10;                  &lt;span&gt;({restaurant.reviewCount} đánh giá)&lt;/span&gt;&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center gap-1&quot;&gt;&#10;                  &lt;Clock className=&quot;w-4 h-4&quot; /&gt;&#10;                  {restaurant.deliveryTime}&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center gap-1&quot;&gt;&#10;                  &lt;Truck className=&quot;w-4 h-4&quot; /&gt;&#10;                  {restaurant.deliveryFee}&#10;                &lt;/div&gt;&#10;                &lt;div className=&quot;flex items-center gap-1&quot;&gt;&#10;                  &lt;MapPin className=&quot;w-4 h-4&quot; /&gt;&#10;                  {restaurant.distance}&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;&#10;              &lt;div className=&quot;space-y-1 text-sm text-muted-foreground&quot;&gt;&#10;                &lt;p&gt;&lt;strong&gt;Địa chỉ:&lt;/strong&gt; {restaurant.address}&lt;/p&gt;&#10;                &lt;p&gt;&lt;strong&gt;Giờ mở cửa:&lt;/strong&gt; {restaurant.openTime}&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div className=&quot;flex flex-col gap-2 w-full md:w-auto&quot;&gt;&#10;              &lt;Button className=&quot;w-full md:w-auto min-w-40&quot;&gt;&#10;                Đặt bàn ngay&#10;              &lt;/Button&gt;&#10;              &lt;Button variant=&quot;outline&quot; className=&quot;w-full md:w-auto&quot;&gt;&#10;                Xem đánh giá&#10;              &lt;/Button&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default RestaurantHeader;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/frontend/cnpm-fooddelivery/src/pages/RestaurantDetailPage.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/frontend/cnpm-fooddelivery/src/pages/RestaurantDetailPage.tsx" />
              <option name="updatedContent" value="import { useParams } from &quot;react-router&quot;;&#10;import Navigation from &quot;@/components/Navigation&quot;;&#10;import Footer from &quot;@/components/Footer&quot;;&#10;import RestaurantHeader from &quot;@/components/RestaurantHeader&quot;;&#10;import MenuSection from &quot;@/components/MenuSection&quot;;&#10;&#10;// Mock data cho nhà hàng (giống food-delivery-app)&#10;const restaurantData = {&#10;  id: 1,&#10;  name: &quot;Burger King Việt Nam&quot;,&#10;  image: &quot;/burger-restaurant-interior-modern.jpg&quot;,&#10;  rating: 4.5,&#10;  reviewCount: 1250,&#10;  deliveryTime: &quot;20-30 phút&quot;,&#10;  deliveryFee: &quot;15.000đ&quot;,&#10;  categories: [&quot;Đồ ăn nhanh&quot;, &quot;Burger&quot;, &quot;Gà rán&quot;],&#10;  promo: &quot;Giảm 30% đơn từ 99k&quot;,&#10;  distance: &quot;1.2km&quot;,&#10;  address: &quot;123 Nguyễn Huệ, Quận 1, TP.HCM&quot;,&#10;  openTime: &quot;08:00 - 22:00&quot;,&#10;};&#10;&#10;const menuData = [&#10;  {&#10;    category: &quot;Burger Bò&quot;,&#10;    items: [&#10;      {&#10;        id: 1,&#10;        name: &quot;Whopper Burger&quot;,&#10;        description: &quot;Burger bò nướng flame-grilled với rau xanh tươi, cà chua, hành tây và sốt đặc biệt&quot;,&#10;        price: 89000,&#10;        image: &quot;/whopper-burger-with-beef-patty.jpg&quot;,&#10;        popular: true,&#10;      },&#10;      {&#10;        id: 2,&#10;        name: &quot;Big King Burger&quot;,&#10;        description: &quot;Burger bò đôi với phô mai, rau xanh và sốt Big King đặc trưng&quot;,&#10;        price: 95000,&#10;        image: &quot;/big-king-burger-double-beef.jpg&quot;,&#10;        popular: false,&#10;      },&#10;      {&#10;        id: 3,&#10;        name: &quot;Bacon King Burger&quot;,&#10;        description: &quot;Burger bò với bacon giòn, phô mai cheddar và sốt mayonnaise&quot;,&#10;        price: 105000,&#10;        image: &quot;/bacon-king-burger-with-crispy-bacon.jpg&quot;,&#10;        popular: true,&#10;      },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Gà Rán &amp; Burger Gà&quot;,&#10;    items: [&#10;      {&#10;        id: 4,&#10;        name: &quot;Chicken Royale&quot;,&#10;        description: &quot;Burger gà giòn với rau xanh tươi và sốt mayonnaise đặc biệt&quot;,&#10;        price: 75000,&#10;        image: &quot;/chicken-royale-burger-crispy.jpg&quot;,&#10;        popular: false,&#10;      },&#10;      {&#10;        id: 5,&#10;        name: &quot;Gà Rán Giòn (6 miếng)&quot;,&#10;        description: &quot;Gà rán giòn tan với gia vị đặc trưng, ăn kèm khoai tây chiên&quot;,&#10;        price: 120000,&#10;        image: &quot;/crispy-fried-chicken.png&quot;,&#10;        popular: true,&#10;      },&#10;    ],&#10;  },&#10;  {&#10;    category: &quot;Đồ Uống&quot;,&#10;    items: [&#10;      {&#10;        id: 6,&#10;        name: &quot;Coca Cola (Ly lớn)&quot;,&#10;        description: &quot;Nước ngọt Coca Cola tươi mát&quot;,&#10;        price: 25000,&#10;        image: &quot;/coca-cola-large-cup-with-ice.jpg&quot;,&#10;        popular: false,&#10;      },&#10;      {&#10;        id: 7,&#10;        name: &quot;Trà Đào Cam Sả&quot;,&#10;        description: &quot;Trà đào cam sả thơm mát, giải khát tuyệt vời&quot;,&#10;        price: 35000,&#10;        image: &quot;/peach-tea-with-lemongrass.jpg&quot;,&#10;        popular: true,&#10;      },&#10;    ],&#10;  },&#10;];&#10;&#10;const RestaurantDetailPage = () =&gt; {&#10;  const { id } = useParams();&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-background&quot;&gt;&#10;      &lt;Navigation /&gt;&#10;      &lt;main&gt;&#10;        &lt;RestaurantHeader restaurant={restaurantData} /&gt;&#10;        &lt;div className=&quot;container mx-auto px-4 py-6&quot;&gt;&#10;          &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;            {menuData.map((section) =&gt; (&#10;              &lt;MenuSection&#10;                key={section.category}&#10;                section={section}&#10;                restaurantId={restaurantData.id}&#10;                restaurantName={restaurantData.name}&#10;              /&gt;&#10;            ))}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/main&gt;&#10;      &lt;Footer /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;};&#10;&#10;export default RestaurantDetailPage;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>